<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edo.zscb.mapper.DebtMapper" >
  <resultMap id="BaseResultMap" type="com.edo.zscb.model.po.Debt" >
    <id column="DebtID" property="debtID" jdbcType="INTEGER" />
    <result column="IdentityID" property="identityID" jdbcType="INTEGER" />
    <result column="HousingLoanNum" property="housingLoanNum" jdbcType="INTEGER" />
    <result column="HousingLoanAmount" property="housingLoanAmount" jdbcType="DECIMAL" />
    <result column="TradLoanNum" property="tradLoanNum" jdbcType="INTEGER" />
    <result column="TradLoanAmount" property="tradLoanAmount" jdbcType="DECIMAL" />
    <result column="OtherLoanNum" property="otherLoanNum" jdbcType="INTEGER" />
    <result column="OtherLoanAmount" property="otherLoanAmount" jdbcType="DECIMAL" />
    <result column="CreditCardNum" property="creditCardNum" jdbcType="INTEGER" />
    <result column="CreditCardAmount" property="creditCardAmount" jdbcType="DECIMAL" />
    <result column="OverdueLoanNum" property="overdueLoanNum" jdbcType="INTEGER" />
    <result column="OverdueLoanNumTerm" property="overdueLoanNumTerm" jdbcType="INTEGER" />
    <result column="OverdueLoanAccount" property="overdueLoanAccount" jdbcType="VARCHAR" />
    <result column="OverdueLoanAccountTerm" property="overdueLoanAccountTerm" jdbcType="INTEGER" />
    <result column="GuaranteeNum" property="guaranteeNum" jdbcType="INTEGER" />
    <result column="GuaranteeAmount" property="guaranteeAmount" jdbcType="DECIMAL" />
    <result column="LoanRepayAmount" property="loanRepayAmount" jdbcType="DECIMAL" />
    <result column="CreditUsedAmount" property="creditUsedAmount" jdbcType="DECIMAL" />
    <result column="CreditOverdraftAmount" property="creditOverdraftAmount" jdbcType="DECIMAL" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
    <result column="IsDelete" property="isDelete" jdbcType="BIT" />
    <result column="Version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    DebtID, IdentityID, HousingLoanNum, HousingLoanAmount, TradLoanNum, TradLoanAmount, 
    OtherLoanNum, OtherLoanAmount, CreditCardNum, CreditCardAmount, OverdueLoanNum, OverdueLoanNumTerm, 
    OverdueLoanAccount, OverdueLoanAccountTerm, GuaranteeNum, GuaranteeAmount, LoanRepayAmount, 
    CreditUsedAmount, CreditOverdraftAmount, Remarks, UpdateTime, UpdateUserID, CreateTime, 
    CreateUserID, IsDelete, Version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from credit_debt
    where DebtID = #{debtID,jdbcType=INTEGER}
  </select>
  
  <!-- 通过IdentityID获得负债信息 -->
  <select id="selectByIdentityID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  	select 
    <include refid="Base_Column_List" />
    from credit_debt D
    where D.IsDelete = 0 and D.IdentityID = #{identityID,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from credit_debt
    where DebtID = #{debtID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edo.zscb.model.po.Debt" >
    insert into credit_debt (DebtID, IdentityID, HousingLoanNum, 
      HousingLoanAmount, TradLoanNum, TradLoanAmount, 
      OtherLoanNum, OtherLoanAmount, CreditCardNum, 
      CreditCardAmount, OverdueLoanNum, OverdueLoanNumTerm, 
      OverdueLoanAccount, OverdueLoanAccountTerm, 
      GuaranteeNum, GuaranteeAmount, LoanRepayAmount, 
      CreditUsedAmount, CreditOverdraftAmount, 
      Remarks, UpdateTime, UpdateUserID, 
      CreateTime, CreateUserID, IsDelete, 
      Version)
    values (#{debtID,jdbcType=INTEGER}, #{identityID,jdbcType=INTEGER}, #{housingLoanNum,jdbcType=INTEGER}, 
      #{housingLoanAmount,jdbcType=DECIMAL}, #{tradLoanNum,jdbcType=INTEGER}, #{tradLoanAmount,jdbcType=DECIMAL}, 
      #{otherLoanNum,jdbcType=INTEGER}, #{otherLoanAmount,jdbcType=DECIMAL}, #{creditCardNum,jdbcType=INTEGER}, 
      #{creditCardAmount,jdbcType=DECIMAL}, #{overdueLoanNum,jdbcType=INTEGER}, #{overdueLoanNumTerm,jdbcType=INTEGER}, 
      #{overdueLoanAccount,jdbcType=VARCHAR}, #{overdueLoanAccountTerm,jdbcType=INTEGER}, 
      #{guaranteeNum,jdbcType=INTEGER}, #{guaranteeAmount,jdbcType=DECIMAL}, #{loanRepayAmount,jdbcType=DECIMAL}, 
      #{creditUsedAmount,jdbcType=DECIMAL}, #{creditOverdraftAmount,jdbcType=DECIMAL}, 
      #{remarks,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edo.zscb.model.po.Debt" >
    insert into credit_debt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="debtID != null" >
        DebtID,
      </if>
      <if test="identityID != null" >
        IdentityID,
      </if>
      <if test="housingLoanNum != null" >
        HousingLoanNum,
      </if>
      <if test="housingLoanAmount != null" >
        HousingLoanAmount,
      </if>
      <if test="tradLoanNum != null" >
        TradLoanNum,
      </if>
      <if test="tradLoanAmount != null" >
        TradLoanAmount,
      </if>
      <if test="otherLoanNum != null" >
        OtherLoanNum,
      </if>
      <if test="otherLoanAmount != null" >
        OtherLoanAmount,
      </if>
      <if test="creditCardNum != null" >
        CreditCardNum,
      </if>
      <if test="creditCardAmount != null" >
        CreditCardAmount,
      </if>
      <if test="overdueLoanNum != null" >
        OverdueLoanNum,
      </if>
      <if test="overdueLoanNumTerm != null" >
        OverdueLoanNumTerm,
      </if>
      <if test="overdueLoanAccount != null" >
        OverdueLoanAccount,
      </if>
      <if test="overdueLoanAccountTerm != null" >
        OverdueLoanAccountTerm,
      </if>
      <if test="guaranteeNum != null" >
        GuaranteeNum,
      </if>
      <if test="guaranteeAmount != null" >
        GuaranteeAmount,
      </if>
      <if test="loanRepayAmount != null" >
        LoanRepayAmount,
      </if>
      <if test="creditUsedAmount != null" >
        CreditUsedAmount,
      </if>
      <if test="creditOverdraftAmount != null" >
        CreditOverdraftAmount,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="updateUserID != null" >
        UpdateUserID,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="createUserID != null" >
        CreateUserID,
      </if>
      <if test="isDelete != null" >
        IsDelete,
      </if>
      <if test="version != null" >
        Version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="debtID != null" >
        #{debtID,jdbcType=INTEGER},
      </if>
      <if test="identityID != null" >
        #{identityID,jdbcType=INTEGER},
      </if>
      <if test="housingLoanNum != null" >
        #{housingLoanNum,jdbcType=INTEGER},
      </if>
      <if test="housingLoanAmount != null" >
        #{housingLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradLoanNum != null" >
        #{tradLoanNum,jdbcType=INTEGER},
      </if>
      <if test="tradLoanAmount != null" >
        #{tradLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherLoanNum != null" >
        #{otherLoanNum,jdbcType=INTEGER},
      </if>
      <if test="otherLoanAmount != null" >
        #{otherLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditCardNum != null" >
        #{creditCardNum,jdbcType=INTEGER},
      </if>
      <if test="creditCardAmount != null" >
        #{creditCardAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueLoanNum != null" >
        #{overdueLoanNum,jdbcType=INTEGER},
      </if>
      <if test="overdueLoanNumTerm != null" >
        #{overdueLoanNumTerm,jdbcType=INTEGER},
      </if>
      <if test="overdueLoanAccount != null" >
        #{overdueLoanAccount,jdbcType=VARCHAR},
      </if>
      <if test="overdueLoanAccountTerm != null" >
        #{overdueLoanAccountTerm,jdbcType=INTEGER},
      </if>
      <if test="guaranteeNum != null" >
        #{guaranteeNum,jdbcType=INTEGER},
      </if>
      <if test="guaranteeAmount != null" >
        #{guaranteeAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanRepayAmount != null" >
        #{loanRepayAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditUsedAmount != null" >
        #{creditUsedAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditOverdraftAmount != null" >
        #{creditOverdraftAmount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edo.zscb.model.po.Debt" >
    update credit_debt
    <set >
      <if test="identityID != null" >
        IdentityID = #{identityID,jdbcType=INTEGER},
      </if>
      <if test="housingLoanNum != null" >
        HousingLoanNum = #{housingLoanNum,jdbcType=INTEGER},
      </if>
      <if test="housingLoanAmount != null" >
        HousingLoanAmount = #{housingLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradLoanNum != null" >
        TradLoanNum = #{tradLoanNum,jdbcType=INTEGER},
      </if>
      <if test="tradLoanAmount != null" >
        TradLoanAmount = #{tradLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherLoanNum != null" >
        OtherLoanNum = #{otherLoanNum,jdbcType=INTEGER},
      </if>
      <if test="otherLoanAmount != null" >
        OtherLoanAmount = #{otherLoanAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditCardNum != null" >
        CreditCardNum = #{creditCardNum,jdbcType=INTEGER},
      </if>
      <if test="creditCardAmount != null" >
        CreditCardAmount = #{creditCardAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueLoanNum != null" >
        OverdueLoanNum = #{overdueLoanNum,jdbcType=INTEGER},
      </if>
      <if test="overdueLoanNumTerm != null" >
        OverdueLoanNumTerm = #{overdueLoanNumTerm,jdbcType=INTEGER},
      </if>
      <if test="overdueLoanAccount != null" >
        OverdueLoanAccount = #{overdueLoanAccount,jdbcType=VARCHAR},
      </if>
      <if test="overdueLoanAccountTerm != null" >
        OverdueLoanAccountTerm = #{overdueLoanAccountTerm,jdbcType=INTEGER},
      </if>
      <if test="guaranteeNum != null" >
        GuaranteeNum = #{guaranteeNum,jdbcType=INTEGER},
      </if>
      <if test="guaranteeAmount != null" >
        GuaranteeAmount = #{guaranteeAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanRepayAmount != null" >
        LoanRepayAmount = #{loanRepayAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditUsedAmount != null" >
        CreditUsedAmount = #{creditUsedAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditOverdraftAmount != null" >
        CreditOverdraftAmount = #{creditOverdraftAmount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        CreateUserID = #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IsDelete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where DebtID = #{debtID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edo.zscb.model.po.Debt" >
    update credit_debt
    set IdentityID = #{identityID,jdbcType=INTEGER},
      HousingLoanNum = #{housingLoanNum,jdbcType=INTEGER},
      HousingLoanAmount = #{housingLoanAmount,jdbcType=DECIMAL},
      TradLoanNum = #{tradLoanNum,jdbcType=INTEGER},
      TradLoanAmount = #{tradLoanAmount,jdbcType=DECIMAL},
      OtherLoanNum = #{otherLoanNum,jdbcType=INTEGER},
      OtherLoanAmount = #{otherLoanAmount,jdbcType=DECIMAL},
      CreditCardNum = #{creditCardNum,jdbcType=INTEGER},
      CreditCardAmount = #{creditCardAmount,jdbcType=DECIMAL},
      OverdueLoanNum = #{overdueLoanNum,jdbcType=INTEGER},
      OverdueLoanNumTerm = #{overdueLoanNumTerm,jdbcType=INTEGER},
      OverdueLoanAccount = #{overdueLoanAccount,jdbcType=VARCHAR},
      OverdueLoanAccountTerm = #{overdueLoanAccountTerm,jdbcType=INTEGER},
      GuaranteeNum = #{guaranteeNum,jdbcType=INTEGER},
      GuaranteeAmount = #{guaranteeAmount,jdbcType=DECIMAL},
      LoanRepayAmount = #{loanRepayAmount,jdbcType=DECIMAL},
      CreditUsedAmount = #{creditUsedAmount,jdbcType=DECIMAL},
      CreditOverdraftAmount = #{creditOverdraftAmount,jdbcType=DECIMAL},
      Remarks = #{remarks,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserID = #{createUserID,jdbcType=INTEGER},
      IsDelete = #{isDelete,jdbcType=BIT},
      Version = #{version,jdbcType=INTEGER}
    where DebtID = #{debtID,jdbcType=INTEGER}
  </update>
</mapper>