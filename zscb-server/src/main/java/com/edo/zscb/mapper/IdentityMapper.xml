<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edo.zscb.mapper.IdentityMapper">
	<resultMap id="BaseResultMap" type="com.edo.zscb.model.po.Identity">
		<id column="IdentityID" property="identityID" jdbcType="INTEGER" />
		<result column="Name" property="name" jdbcType="VARCHAR" />
		<result column="IDNumber" property="IDNumber" jdbcType="VARCHAR" />
		<result column="Mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="BankNumber" property="bankNumber" jdbcType="VARCHAR" />
		<result column="HouseNumber" property="houseNumber" jdbcType="VARCHAR" />
		<result column="IsMatch" property="isMatch" jdbcType="BIT" />
		<result column="MateID" property="mateID" jdbcType="INTEGER" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="BIT" />
		<result column="Version" property="version" jdbcType="INTEGER" />
		<association select="selectMate" column="mateID" property="mate" javaType="com.edo.zscb.model.po.Identity"></association>
	</resultMap>
	<sql id="Base_Column_List">
		I.IdentityID, I.Name, I.IDNumber, I.Mobile, I.BankNumber, I.HouseNumber, I.IsMatch, I.MateID, I.Remarks,
		I.UpdateTime, I.UpdateUserID, I.CreateTime, I.CreateUserID, I.IsDelete, I.Version
	</sql>
	
	<!-- 通过IdentityID获得身份信息 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from credit_identity I
		where I.IsDelete = 0 and I.IdentityID = #{identityID,jdbcType=INTEGER}
	</select>
	
	<!-- 查询配偶信息 -->
	<select id="selectMate" resultType="com.edo.zscb.model.po.Identity" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from credit_identity I
		where I.IsDelete = 0 and I.IdentityID = #{mateID,jdbcType=INTEGER}
	</select>

	<!-- 查询符合条件的借款人身份信息数量 -->
	<select id="selectCountForSearch" resultType="java.lang.Integer" parameterType="com.edo.zscb.model.vo.SearchCondition">
		select
		count(I.IdentityID)
		from credit_identity I
		where I.IsDelete = 0 and I.MateID &lt;&gt; 0
		<if test="name != null and name != ''">
			and I.Name like "%${name}%"
		</if>
		<if test="idNumber != null and idNumber != ''">
			and I.IDNumber like "%${idNumber}%"
		</if>
		<if test="mobile != null and mobile != ''">
			and I.Mobile like "%${mobile}%"
		</if>
	</select>

	<!-- 查询符合条件的借款人身份信息 -->
	<select id="selectForSearch" resultMap="BaseResultMap" parameterType="com.edo.zscb.model.vo.SearchCondition">
		select
		<include refid="Base_Column_List" />
		from credit_identity I
		where I.IsDelete = 0 and I.MateID &lt;&gt; 0
		<if test="name != null and name != ''">
			and I.Name like "%${name}%"
		</if>
		<if test="idNumber != null and idNumber != ''">
			and I.IDNumber like "%${idNumber}%"
		</if>
		<if test="mobile != null and mobile != ''">
			and I.Mobile like "%${mobile}%"
		</if>
		<if test="page != null">
			order by ${page.sortField} ${page.sortType}
			limit ${page.start}, ${page.pageSize}
		</if>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from credit_identity
		where IdentityID = #{identityID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.edo.zscb.model.po.Identity">
		insert into credit_identity (IdentityID, Name, IDNumber,
		Mobile, BankNumber, HouseNumber,
		IsMatch, MateID, Remarks,
		UpdateTime, UpdateUserID, CreateTime,
		CreateUserID, IsDelete, Version
		)
		values (#{identityID,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{IDNumber,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR}, #{bankNumber,jdbcType=VARCHAR}, #{houseNumber,jdbcType=VARCHAR},
		#{isMatch,jdbcType=BIT}, #{mateID,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, #{version,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.edo.zscb.model.po.Identity">
		insert into credit_identity
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="identityID != null">
				IdentityID,
			</if>
			<if test="name != null">
				Name,
			</if>
			<if test="IDNumber != null">
				IDNumber,
			</if>
			<if test="mobile != null">
				Mobile,
			</if>
			<if test="bankNumber != null">
				BankNumber,
			</if>
			<if test="houseNumber != null">
				HouseNumber,
			</if>
			<if test="isMatch != null">
				IsMatch,
			</if>
			<if test="mateID != null">
				MateID,
			</if>
			<if test="remarks != null">
				Remarks,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="updateUserID != null">
				UpdateUserID,
			</if>
			<if test="createTime != null">
				CreateTime,
			</if>
			<if test="createUserID != null">
				CreateUserID,
			</if>
			<if test="isDelete != null">
				IsDelete,
			</if>
			<if test="version != null">
				Version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="identityID != null">
				#{identityID,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="IDNumber != null">
				#{IDNumber,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="bankNumber != null">
				#{bankNumber,jdbcType=VARCHAR},
			</if>
			<if test="houseNumber != null">
				#{houseNumber,jdbcType=VARCHAR},
			</if>
			<if test="isMatch != null">
				#{isMatch,jdbcType=BIT},
			</if>
			<if test="mateID != null">
				#{mateID,jdbcType=INTEGER},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserID != null">
				#{updateUserID,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserID != null">
				#{createUserID,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=BIT},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.edo.zscb.model.po.Identity">
		update credit_identity
		<set>
			<if test="name != null">
				Name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="IDNumber != null">
				IDNumber = #{IDNumber,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				Mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="bankNumber != null">
				BankNumber = #{bankNumber,jdbcType=VARCHAR},
			</if>
			<if test="houseNumber != null">
				HouseNumber = #{houseNumber,jdbcType=VARCHAR},
			</if>
			<if test="isMatch != null">
				IsMatch = #{isMatch,jdbcType=BIT},
			</if>
			<if test="mateID != null">
				MateID = #{mateID,jdbcType=INTEGER},
			</if>
			<if test="remarks != null">
				Remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserID != null">
				UpdateUserID = #{updateUserID,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				CreateTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserID != null">
				CreateUserID = #{createUserID,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				IsDelete = #{isDelete,jdbcType=BIT},
			</if>
			<if test="version != null">
				Version = #{version,jdbcType=INTEGER},
			</if>
		</set>
		where IdentityID = #{identityID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.edo.zscb.model.po.Identity">
		update credit_identity
		set Name = #{name,jdbcType=VARCHAR},
		IDNumber = #{IDNumber,jdbcType=VARCHAR},
		Mobile = #{mobile,jdbcType=VARCHAR},
		BankNumber = #{bankNumber,jdbcType=VARCHAR},
		HouseNumber = #{houseNumber,jdbcType=VARCHAR},
		IsMatch = #{isMatch,jdbcType=BIT},
		MateID = #{mateID,jdbcType=INTEGER},
		Remarks = #{remarks,jdbcType=VARCHAR},
		UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
		UpdateUserID = #{updateUserID,jdbcType=INTEGER},
		CreateTime = #{createTime,jdbcType=TIMESTAMP},
		CreateUserID = #{createUserID,jdbcType=INTEGER},
		IsDelete = #{isDelete,jdbcType=BIT},
		Version = #{version,jdbcType=INTEGER}
		where IdentityID = #{identityID,jdbcType=INTEGER}
	</update>
</mapper>