<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edo.zscb.mapper.PawnPeopleMapper" >
  <resultMap id="BaseResultMap" type="com.edo.zscb.model.po.PawnPeople" >
    <id column="PeopleID" property="peopleID" jdbcType="INTEGER" />
    <result column="PawnID" property="pawnID" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="IDNumber" property="IDNumber" jdbcType="VARCHAR" />
    <result column="IsMatch" property="isMatch" jdbcType="BIT" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
    <result column="IsDelete" property="isDelete" jdbcType="BIT" />
    <result column="Version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    PeopleID, PawnID, Name, IDNumber, IsMatch, Remarks, UpdateTime, UpdateUserID, CreateTime, 
    CreateUserID, IsDelete, Version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from credit_pawn_people
    where PeopleID = #{peopleID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from credit_pawn_people
    where PeopleID = #{peopleID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edo.zscb.model.po.PawnPeople" >
    insert into credit_pawn_people (PeopleID, PawnID, Name, 
      IDNumber, IsMatch, Remarks, 
      UpdateTime, UpdateUserID, CreateTime, 
      CreateUserID, IsDelete, Version
      )
    values (#{peopleID,jdbcType=INTEGER}, #{pawnID,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{IDNumber,jdbcType=VARCHAR}, #{isMatch,jdbcType=BIT}, #{remarks,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.edo.zscb.model.po.PawnPeople" >
    insert into credit_pawn_people
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="peopleID != null" >
        PeopleID,
      </if>
      <if test="pawnID != null" >
        PawnID,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="IDNumber != null" >
        IDNumber,
      </if>
      <if test="isMatch != null" >
        IsMatch,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="updateUserID != null" >
        UpdateUserID,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="createUserID != null" >
        CreateUserID,
      </if>
      <if test="isDelete != null" >
        IsDelete,
      </if>
      <if test="version != null" >
        Version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="peopleID != null" >
        #{peopleID,jdbcType=INTEGER},
      </if>
      <if test="pawnID != null" >
        #{pawnID,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="IDNumber != null" >
        #{IDNumber,jdbcType=VARCHAR},
      </if>
      <if test="isMatch != null" >
        #{isMatch,jdbcType=BIT},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edo.zscb.model.po.PawnPeople" >
    update credit_pawn_people
    <set >
      <if test="pawnID != null" >
        PawnID = #{pawnID,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="IDNumber != null" >
        IDNumber = #{IDNumber,jdbcType=VARCHAR},
      </if>
      <if test="isMatch != null" >
        IsMatch = #{isMatch,jdbcType=BIT},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        CreateUserID = #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IsDelete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where PeopleID = #{peopleID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edo.zscb.model.po.PawnPeople" >
    update credit_pawn_people
    set PawnID = #{pawnID,jdbcType=INTEGER},
      Name = #{name,jdbcType=VARCHAR},
      IDNumber = #{IDNumber,jdbcType=VARCHAR},
      IsMatch = #{isMatch,jdbcType=BIT},
      Remarks = #{remarks,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserID = #{createUserID,jdbcType=INTEGER},
      IsDelete = #{isDelete,jdbcType=BIT},
      Version = #{version,jdbcType=INTEGER}
    where PeopleID = #{peopleID,jdbcType=INTEGER}
  </update>
</mapper>