<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edo.zscb.mapper.RegisterMapper" >
  <resultMap id="BaseResultMap" type="com.edo.zscb.model.po.Register" >
    <id column="RegisterID" property="registerID" jdbcType="INTEGER" />
    <result column="IdentityID" property="identityID" jdbcType="INTEGER" />
    <result column="IsMarried" property="isMarried" jdbcType="BIT" />
    <result column="RegisterAddress" property="registerAddress" jdbcType="VARCHAR" />
    <result column="RootAddress" property="rootAddress" jdbcType="VARCHAR" />
    <result column="BornAddress" property="bornAddress" jdbcType="VARCHAR" />
    <result column="UsedName" property="usedName" jdbcType="VARCHAR" />
    <result column="ParentID" property="parentID" jdbcType="INTEGER" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
    <result column="IsDelete" property="isDelete" jdbcType="BIT" />
    <result column="Version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    RegisterID, IdentityID, IsMarried, RegisterAddress, RootAddress, BornAddress, UsedName, 
    ParentID, Remarks, UpdateTime, UpdateUserID, CreateTime, CreateUserID, IsDelete, 
    Version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from credit_register
    where RegisterID = #{registerID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from credit_register
    where RegisterID = #{registerID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edo.zscb.model.po.Register" >
    insert into credit_register (RegisterID, IdentityID, IsMarried, 
      RegisterAddress, RootAddress, BornAddress, 
      UsedName, ParentID, Remarks, 
      UpdateTime, UpdateUserID, CreateTime, 
      CreateUserID, IsDelete, Version
      )
    values (#{registerID,jdbcType=INTEGER}, #{identityID,jdbcType=INTEGER}, #{isMarried,jdbcType=BIT}, 
      #{registerAddress,jdbcType=VARCHAR}, #{rootAddress,jdbcType=VARCHAR}, #{bornAddress,jdbcType=VARCHAR}, 
      #{usedName,jdbcType=VARCHAR}, #{parentID,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.edo.zscb.model.po.Register" >
    insert into credit_register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="registerID != null" >
        RegisterID,
      </if>
      <if test="identityID != null" >
        IdentityID,
      </if>
      <if test="isMarried != null" >
        IsMarried,
      </if>
      <if test="registerAddress != null" >
        RegisterAddress,
      </if>
      <if test="rootAddress != null" >
        RootAddress,
      </if>
      <if test="bornAddress != null" >
        BornAddress,
      </if>
      <if test="usedName != null" >
        UsedName,
      </if>
      <if test="parentID != null" >
        ParentID,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="updateUserID != null" >
        UpdateUserID,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="createUserID != null" >
        CreateUserID,
      </if>
      <if test="isDelete != null" >
        IsDelete,
      </if>
      <if test="version != null" >
        Version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="registerID != null" >
        #{registerID,jdbcType=INTEGER},
      </if>
      <if test="identityID != null" >
        #{identityID,jdbcType=INTEGER},
      </if>
      <if test="isMarried != null" >
        #{isMarried,jdbcType=BIT},
      </if>
      <if test="registerAddress != null" >
        #{registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="rootAddress != null" >
        #{rootAddress,jdbcType=VARCHAR},
      </if>
      <if test="bornAddress != null" >
        #{bornAddress,jdbcType=VARCHAR},
      </if>
      <if test="usedName != null" >
        #{usedName,jdbcType=VARCHAR},
      </if>
      <if test="parentID != null" >
        #{parentID,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edo.zscb.model.po.Register" >
    update credit_register
    <set >
      <if test="identityID != null" >
        IdentityID = #{identityID,jdbcType=INTEGER},
      </if>
      <if test="isMarried != null" >
        IsMarried = #{isMarried,jdbcType=BIT},
      </if>
      <if test="registerAddress != null" >
        RegisterAddress = #{registerAddress,jdbcType=VARCHAR},
      </if>
      <if test="rootAddress != null" >
        RootAddress = #{rootAddress,jdbcType=VARCHAR},
      </if>
      <if test="bornAddress != null" >
        BornAddress = #{bornAddress,jdbcType=VARCHAR},
      </if>
      <if test="usedName != null" >
        UsedName = #{usedName,jdbcType=VARCHAR},
      </if>
      <if test="parentID != null" >
        ParentID = #{parentID,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        CreateUserID = #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IsDelete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where RegisterID = #{registerID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edo.zscb.model.po.Register" >
    update credit_register
    set IdentityID = #{identityID,jdbcType=INTEGER},
      IsMarried = #{isMarried,jdbcType=BIT},
      RegisterAddress = #{registerAddress,jdbcType=VARCHAR},
      RootAddress = #{rootAddress,jdbcType=VARCHAR},
      BornAddress = #{bornAddress,jdbcType=VARCHAR},
      UsedName = #{usedName,jdbcType=VARCHAR},
      ParentID = #{parentID,jdbcType=INTEGER},
      Remarks = #{remarks,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserID = #{createUserID,jdbcType=INTEGER},
      IsDelete = #{isDelete,jdbcType=BIT},
      Version = #{version,jdbcType=INTEGER}
    where RegisterID = #{registerID,jdbcType=INTEGER}
  </update>
</mapper>